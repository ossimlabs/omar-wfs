buildscript {
  ext {
    grailsVersion = project.grailsVersion
    baseImage = ""
  }
  repositories {
    mavenLocal()
    maven { url = ossimlabsMavenUrl }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.10"
  }
  if(System.env.OMAR_COMMON_PROPERTIES)
  {
    apply from: System.env.OMAR_COMMON_PROPERTIES
  }
}

plugins {
  id "com.github.ben-manes.versions" version "0.17.0"
  id "org.sonarqube" version "2.6.2"
}

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"
apply plugin: "org.grails.grails-gsp"
apply plugin: "asset-pipeline"

apply plugin: "java"
apply plugin: "maven-publish"

group "io.ossim.omar.plugins"

ext {
  grailsVersion = project.grailsVersion
}

repositories {
  mavenLocal()
  maven { url = ossimlabsMavenUrl }
}

dependencyManagement {
   imports {
     mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Dalston.SR5"
   }
   applyMavenExclusions false
}

if ( System.getenv('O2_INLINE_BUILD') ) {
  grails {
    plugins {
      compile project(":omar-core-plugin")
      compile project(":omar-hibernate-spatial-plugin")
    }
  }
}

dependencies {
  if ( ! System.getenv('O2_INLINE_BUILD') ) {
    compile "io.ossim.omar.plugins:omar-core-plugin:+"
    compile "io.ossim.omar.plugins:omar-hibernate-spatial-plugin:+"
  }
  compile "org.grails:grails-core"
  compile "org.grails:grails-web-boot"
  compile "org.grails:grails-logging"
  compile "org.grails:grails-plugin-rest"
  compile "org.grails:grails-plugin-databinding"
  compile "org.grails:grails-plugin-i18n"
  compile "org.grails:grails-plugin-services"
  compile "org.grails:grails-plugin-url-mappings"
  compile "org.grails:grails-plugin-interceptors"
  compile "org.grails.plugins:cache"
  compile "org.grails.plugins:async"
  compile "org.grails.plugins:scaffolding"
  compile "org.grails.plugins:gsp"
  compile "org.springframework.boot:spring-boot-starter-logging"
  compile "org.springframework.boot:spring-boot-autoconfigure"
  compile "org.springframework.boot:spring-boot-starter-actuator"
  compile "org.springframework.boot:spring-boot-starter-tomcat"

  console "org.grails:grails-console"
  profile "org.grails.profiles:web-plugin"
  provided "org.grails:grails-plugin-services"
  provided "org.grails:grails-plugin-domain-class"
  runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.10"
  testCompile "org.grails:grails-gorm-testing-support"
  testCompile "org.grails:grails-plugin-testing"
  testCompile "org.grails.plugins:geb"
  testCompile "org.grails:grails-web-testing-support"
  testCompile "org.grails:grails-test-mixins:3.3.0"
  testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.52.0"
  testRuntime "net.sourceforge.htmlunit:htmlunit:2.29"
}

assets {
  packagePlugin = true
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }
}
