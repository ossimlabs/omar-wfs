info:
  app:
    name: '@info.app.name@'
    version: '@info.app.version@'
    grailsVersion: '@info.app.grailsVersion@'

dataSource:
  driverClassName: org.h2.Driver
  username: sa
  password: ''
  pooled: true
  jmxExport: true

environments:
  development:
    dataSource:
      dbCreate: create-drop
      url: jdbc:h2:mem:devDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
  test:
    dataSource:
      dbCreate: update
      url: jdbc:h2:mem:testDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
  production:
    dataSource:
      dbCreate: none
      url: jdbc:h2:./prodDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
      properties:
        jmxEnabled: true
        initialSize: 5
        maxActive: 50
        minIdle: 5
        maxIdle: 25
        maxWait: 10000
        maxAge: 600000
        timeBetweenEvictionRunsMillis: 5000
        minEvictableIdleTimeMillis: 60000
        validationQuery: SELECT 1
        validationQueryTimeout: 3
        validationInterval: 15000
        testOnBorrow: true
        testWhileIdle: true
        testOnReturn: false
        jdbcInterceptors: ConnectionState
        defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED

grails:
  gorm:
    reactor:
      events: false
  mime:
    disable:
      accept:
        header:
          userAgents:
            - Gecko
            - WebKit
            - Presto
            - Trident
    types:
      all: '*/*'
      atom: application/atom+xml
      css: text/css
      csv: text/csv
      form: application/x-www-form-urlencoded
      html:
        - text/html
        - application/xhtml+xml
      js: text/javascript
      json:
        - application/json
        - text/json
      multipartForm: multipart/form-data
      pdf: application/pdf
      rss: application/rss+xml
      text: text/plain
      hal:
        - application/hal+json
        - application/hal+xml
      xml:
        - text/xml
        - application/xml
  views:
    gsp:
      encoding: UTF-8
      htmlcodec: xml
      codecs:
        expression: html
        scriptlet: html
        taglib: none
        staticparts: none
    default:
      codec: html
hibernate:
  hbm2ddl:
    auto: update
  cache:
    queries: false
    use_second_level_cache: false
    use_query_cache: false

---
grails:
  cors:
    enabled: true
  resources:
    pattern: '/**'
  plugin:
    console:
      enabled: true
      csrfProtection:
        enabled: false

server:
  port: 8080
  servlet:
    context-path: /omar-wfs
management:
  endpoints:
    enabled-by-default: true
    web:
      base-path: '/actuator'
      exposure:
        include: '*'
environments:
  production:
    spring:
      h2:
        console:
          enabled: true
          settings:
            web-allow-others: true
---
omar:
  wfs:
    # we have a variable that will allow us to override the result
    # to include numberMatch.  By default this is off.  I do not see
    # numberMatch as part of the spec only the numberOfFeatures that is in the result
    # set.  We will default this to false because this is an expensive operation
    # when enabled for it will do a count query and a result query when
    # the return type is of type "results" instead of "hits".
    includeNumberMatched: false
    app:
      geoscript:
        # The url endpoint for the omar-geoscript service
        url: http://omar-geoscript-app:8080/omar-geoscript/geoscriptApi    

